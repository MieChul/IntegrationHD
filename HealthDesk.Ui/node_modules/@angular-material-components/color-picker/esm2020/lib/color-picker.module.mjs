import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatDialogModule } from '@angular/material/dialog';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatRadioModule } from '@angular/material/radio';
import { NGX_MAT_COLOR_PICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, NgxMatColorCanvasComponent, NgxMatColorCollectionComponent, NgxMatColorPaletteComponent, NgxMatColorPickerComponent, NgxMatColorPickerContentComponent, NgxMatColorPickerInput, NgxMatColorSliderComponent, NgxMatColorToggleComponent, NgxMatColorpickerToggleIcon } from './components';
import { NumericColorInputDirective } from './directives';
import { ColorAdapter } from './services';
import * as i0 from "@angular/core";
export class NgxMatColorPickerModule {
}
/** @nocollapse */ NgxMatColorPickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ NgxMatColorPickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, declarations: [NgxMatColorPaletteComponent,
        NgxMatColorCanvasComponent,
        NgxMatColorCollectionComponent,
        NgxMatColorSliderComponent,
        NumericColorInputDirective,
        NgxMatColorPickerContentComponent,
        NgxMatColorPickerComponent,
        NgxMatColorToggleComponent,
        NgxMatColorpickerToggleIcon,
        NgxMatColorPickerInput], imports: [CommonModule,
        MatInputModule,
        MatButtonModule,
        MatCardModule,
        MatRadioModule,
        FormsModule,
        ReactiveFormsModule,
        MatDialogModule,
        PortalModule,
        MatIconModule], exports: [NgxMatColorToggleComponent,
        NgxMatColorPickerInput,
        NgxMatColorPickerComponent,
        NgxMatColorpickerToggleIcon] });
/** @nocollapse */ NgxMatColorPickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, providers: [
        ColorAdapter,
        NGX_MAT_COLOR_PICKER_SCROLL_STRATEGY_FACTORY_PROVIDER
    ], imports: [CommonModule,
        MatInputModule,
        MatButtonModule,
        MatCardModule,
        MatRadioModule,
        FormsModule,
        ReactiveFormsModule,
        MatDialogModule,
        PortalModule,
        MatIconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        NgxMatColorPaletteComponent,
                        NgxMatColorCanvasComponent,
                        NgxMatColorCollectionComponent,
                        NgxMatColorSliderComponent,
                        NumericColorInputDirective,
                        NgxMatColorPickerContentComponent,
                        NgxMatColorPickerComponent,
                        NgxMatColorToggleComponent,
                        NgxMatColorpickerToggleIcon,
                        NgxMatColorPickerInput
                    ],
                    imports: [
                        CommonModule,
                        MatInputModule,
                        MatButtonModule,
                        MatCardModule,
                        MatRadioModule,
                        FormsModule,
                        ReactiveFormsModule,
                        MatDialogModule,
                        PortalModule,
                        MatIconModule
                    ],
                    exports: [
                        NgxMatColorToggleComponent,
                        NgxMatColorPickerInput,
                        NgxMatColorPickerComponent,
                        NgxMatColorpickerToggleIcon
                    ],
                    entryComponents: [
                        NgxMatColorPickerContentComponent
                    ],
                    providers: [
                        ColorAdapter,
                        NGX_MAT_COLOR_PICKER_SCROLL_STRATEGY_FACTORY_PROVIDER
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvbG9yLXBpY2tlci9zcmMvbGliL2NvbG9yLXBpY2tlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLEVBQ0wscURBQXFELEVBQ3JELDBCQUEwQixFQUMxQiw4QkFBOEIsRUFDOUIsMkJBQTJCLEVBQzNCLDBCQUEwQixFQUMxQixpQ0FBaUMsRUFDakMsc0JBQXNCLEVBQUUsMEJBQTBCLEVBQ2xELDBCQUEwQixFQUMxQiwyQkFBMkIsRUFDNUIsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxZQUFZLENBQUM7O0FBeUMxQyxNQUFNLE9BQU8sdUJBQXVCOzt1SUFBdkIsdUJBQXVCO3dJQUF2Qix1QkFBdUIsaUJBckNoQywyQkFBMkI7UUFDM0IsMEJBQTBCO1FBQzFCLDhCQUE4QjtRQUM5QiwwQkFBMEI7UUFDMUIsMEJBQTBCO1FBQzFCLGlDQUFpQztRQUNqQywwQkFBMEI7UUFDMUIsMEJBQTBCO1FBQzFCLDJCQUEyQjtRQUMzQixzQkFBc0IsYUFHdEIsWUFBWTtRQUNaLGNBQWM7UUFDZCxlQUFlO1FBQ2YsYUFBYTtRQUNiLGNBQWM7UUFDZCxXQUFXO1FBQ1gsbUJBQW1CO1FBQ25CLGVBQWU7UUFDZixZQUFZO1FBQ1osYUFBYSxhQUdiLDBCQUEwQjtRQUMxQixzQkFBc0I7UUFDdEIsMEJBQTBCO1FBQzFCLDJCQUEyQjt3SUFVbEIsdUJBQXVCLGFBTHZCO1FBQ1QsWUFBWTtRQUNaLHFEQUFxRDtLQUN0RCxZQXZCQyxZQUFZO1FBQ1osY0FBYztRQUNkLGVBQWU7UUFDZixhQUFhO1FBQ2IsY0FBYztRQUNkLFdBQVc7UUFDWCxtQkFBbUI7UUFDbkIsZUFBZTtRQUNmLFlBQVk7UUFDWixhQUFhOzJGQWdCSix1QkFBdUI7a0JBdkNuQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWiwyQkFBMkI7d0JBQzNCLDBCQUEwQjt3QkFDMUIsOEJBQThCO3dCQUM5QiwwQkFBMEI7d0JBQzFCLDBCQUEwQjt3QkFDMUIsaUNBQWlDO3dCQUNqQywwQkFBMEI7d0JBQzFCLDBCQUEwQjt3QkFDMUIsMkJBQTJCO3dCQUMzQixzQkFBc0I7cUJBQ3ZCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGNBQWM7d0JBQ2QsZUFBZTt3QkFDZixhQUFhO3dCQUNiLGNBQWM7d0JBQ2QsV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLGVBQWU7d0JBQ2YsWUFBWTt3QkFDWixhQUFhO3FCQUNkO29CQUNELE9BQU8sRUFBRTt3QkFDUCwwQkFBMEI7d0JBQzFCLHNCQUFzQjt3QkFDdEIsMEJBQTBCO3dCQUMxQiwyQkFBMkI7cUJBQzVCO29CQUNELGVBQWUsRUFBRTt3QkFDZixpQ0FBaUM7cUJBQ2xDO29CQUNELFNBQVMsRUFBRTt3QkFDVCxZQUFZO3dCQUNaLHFEQUFxRDtxQkFDdEQ7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb3J0YWxNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XHJcbmltcG9ydCB7IE1hdENhcmRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jYXJkJztcclxuaW1wb3J0IHsgTWF0RGlhbG9nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcclxuaW1wb3J0IHsgTWF0SWNvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2ljb24nO1xyXG5pbXBvcnQgeyBNYXRJbnB1dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2lucHV0JztcclxuaW1wb3J0IHsgTWF0UmFkaW9Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9yYWRpbyc7XHJcbmltcG9ydCB7XHJcbiAgTkdYX01BVF9DT0xPUl9QSUNLRVJfU0NST0xMX1NUUkFURUdZX0ZBQ1RPUllfUFJPVklERVIsXHJcbiAgTmd4TWF0Q29sb3JDYW52YXNDb21wb25lbnQsXHJcbiAgTmd4TWF0Q29sb3JDb2xsZWN0aW9uQ29tcG9uZW50LFxyXG4gIE5neE1hdENvbG9yUGFsZXR0ZUNvbXBvbmVudCxcclxuICBOZ3hNYXRDb2xvclBpY2tlckNvbXBvbmVudCxcclxuICBOZ3hNYXRDb2xvclBpY2tlckNvbnRlbnRDb21wb25lbnQsXHJcbiAgTmd4TWF0Q29sb3JQaWNrZXJJbnB1dCwgTmd4TWF0Q29sb3JTbGlkZXJDb21wb25lbnQsXHJcbiAgTmd4TWF0Q29sb3JUb2dnbGVDb21wb25lbnQsXHJcbiAgTmd4TWF0Q29sb3JwaWNrZXJUb2dnbGVJY29uXHJcbn0gZnJvbSAnLi9jb21wb25lbnRzJztcclxuaW1wb3J0IHsgTnVtZXJpY0NvbG9ySW5wdXREaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMnO1xyXG5pbXBvcnQgeyBDb2xvckFkYXB0ZXIgfSBmcm9tICcuL3NlcnZpY2VzJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBOZ3hNYXRDb2xvclBhbGV0dGVDb21wb25lbnQsXHJcbiAgICBOZ3hNYXRDb2xvckNhbnZhc0NvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yQ29sbGVjdGlvbkNvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yU2xpZGVyQ29tcG9uZW50LFxyXG4gICAgTnVtZXJpY0NvbG9ySW5wdXREaXJlY3RpdmUsXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbnRlbnRDb21wb25lbnQsXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yVG9nZ2xlQ29tcG9uZW50LFxyXG4gICAgTmd4TWF0Q29sb3JwaWNrZXJUb2dnbGVJY29uLFxyXG4gICAgTmd4TWF0Q29sb3JQaWNrZXJJbnB1dFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgTWF0SW5wdXRNb2R1bGUsXHJcbiAgICBNYXRCdXR0b25Nb2R1bGUsXHJcbiAgICBNYXRDYXJkTW9kdWxlLFxyXG4gICAgTWF0UmFkaW9Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICBNYXREaWFsb2dNb2R1bGUsXHJcbiAgICBQb3J0YWxNb2R1bGUsXHJcbiAgICBNYXRJY29uTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBOZ3hNYXRDb2xvclRvZ2dsZUNvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yUGlja2VySW5wdXQsXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9ycGlja2VyVG9nZ2xlSWNvblxyXG4gIF0sXHJcbiAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbnRlbnRDb21wb25lbnRcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgQ29sb3JBZGFwdGVyLFxyXG4gICAgTkdYX01BVF9DT0xPUl9QSUNLRVJfU0NST0xMX1NUUkFURUdZX0ZBQ1RPUllfUFJPVklERVJcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hNYXRDb2xvclBpY2tlck1vZHVsZSB7IH1cclxuIl19