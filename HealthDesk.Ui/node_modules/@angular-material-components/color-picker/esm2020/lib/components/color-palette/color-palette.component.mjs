import { Component, ViewEncapsulation, Output, EventEmitter, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../color-canvas/color-canvas.component";
import * as i2 from "../color-collection/color-collection.component";
export class NgxMatColorPaletteComponent {
    constructor() {
        this.colorChanged = new EventEmitter();
    }
    ngOnInit() {
    }
    handleColorChanged(color) {
        this.colorChanged.emit(color);
    }
}
/** @nocollapse */ NgxMatColorPaletteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPaletteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ NgxMatColorPaletteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.2", type: NgxMatColorPaletteComponent, selector: "ngx-mat-color-palette", inputs: { color: "color", theme: "theme" }, outputs: { colorChanged: "colorChanged" }, host: { classAttribute: "ngx-mat-color-palette" }, ngImport: i0, template: "<ngx-mat-color-canvas (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\"\r\n  [theme]=\"theme\"></ngx-mat-color-canvas>\r\n\r\n<ngx-mat-color-collection (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\">\r\n</ngx-mat-color-collection>", styles: [".ngx-mat-color-palette .actions{margin-top:10px;display:flex}.ngx-mat-color-palette .actions .left{display:flex;flex-direction:column;margin-right:15px}.ngx-mat-color-palette .actions .left .preview{flex:2 1 auto;margin-bottom:10px}.ngx-mat-color-palette .actions .right{display:flex;width:60px;flex-direction:column}\n"], dependencies: [{ kind: "component", type: i1.NgxMatColorCanvasComponent, selector: "ngx-mat-color-canvas" }, { kind: "component", type: i2.NgxMatColorCollectionComponent, selector: "ngx-mat-color-collection", inputs: ["color"], outputs: ["colorChanged"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPaletteComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-mat-color-palette', encapsulation: ViewEncapsulation.None, host: {
                        'class': 'ngx-mat-color-palette'
                    }, template: "<ngx-mat-color-canvas (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\"\r\n  [theme]=\"theme\"></ngx-mat-color-canvas>\r\n\r\n<ngx-mat-color-collection (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\">\r\n</ngx-mat-color-collection>", styles: [".ngx-mat-color-palette .actions{margin-top:10px;display:flex}.ngx-mat-color-palette .actions .left{display:flex;flex-direction:column;margin-right:15px}.ngx-mat-color-palette .actions .left .preview{flex:2 1 auto;margin-bottom:10px}.ngx-mat-color-palette .actions .right{display:flex;width:60px;flex-direction:column}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { colorChanged: [{
                type: Output
            }], color: [{
                type: Input
            }], theme: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItcGFsZXR0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb2xvci1waWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL2NvbG9yLXBhbGV0dGUvY29sb3ItcGFsZXR0ZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb2xvci1waWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL2NvbG9yLXBhbGV0dGUvY29sb3ItcGFsZXR0ZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLGlCQUFpQixFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBYWxHLE1BQU0sT0FBTywyQkFBMkI7SUFPdEM7UUFMVSxpQkFBWSxHQUF3QixJQUFJLFlBQVksRUFBUyxDQUFDO0lBS3hELENBQUM7SUFFakIsUUFBUTtJQUNSLENBQUM7SUFFTSxrQkFBa0IsQ0FBQyxLQUFZO1FBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7OzJJQWRVLDJCQUEyQjsrSEFBM0IsMkJBQTJCLHVNQ2J4Qyx1UUFJMkI7MkZEU2QsMkJBQTJCO2tCQVR2QyxTQUFTOytCQUNFLHVCQUF1QixpQkFHbEIsaUJBQWlCLENBQUMsSUFBSSxRQUMvQjt3QkFDSixPQUFPLEVBQUUsdUJBQXVCO3FCQUNqQzswRUFJUyxZQUFZO3NCQUFyQixNQUFNO2dCQUVFLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24sIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4uLy4uL21vZGVscyc7XHJcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICduZ3gtbWF0LWNvbG9yLXBhbGV0dGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnY29sb3ItcGFsZXR0ZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJ2NvbG9yLXBhbGV0dGUuY29tcG9uZW50LnNjc3MnXSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gIGhvc3Q6IHtcclxuICAgICdjbGFzcyc6ICduZ3gtbWF0LWNvbG9yLXBhbGV0dGUnXHJcbiAgfVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4TWF0Q29sb3JQYWxldHRlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQE91dHB1dCgpIGNvbG9yQ2hhbmdlZDogRXZlbnRFbWl0dGVyPENvbG9yPiA9IG5ldyBFdmVudEVtaXR0ZXI8Q29sb3I+KCk7XHJcblxyXG4gIEBJbnB1dCgpIGNvbG9yOiBDb2xvcjtcclxuICBASW5wdXQoKSB0aGVtZTogVGhlbWVQYWxldHRlO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBoYW5kbGVDb2xvckNoYW5nZWQoY29sb3I6IENvbG9yKSB7XHJcbiAgICB0aGlzLmNvbG9yQ2hhbmdlZC5lbWl0KGNvbG9yKTtcclxuICB9XHJcblxyXG59XHJcbiIsIjxuZ3gtbWF0LWNvbG9yLWNhbnZhcyAoY29sb3JDaGFuZ2VkKT1cImhhbmRsZUNvbG9yQ2hhbmdlZCgkZXZlbnQpXCIgW2NvbG9yXT1cImNvbG9yXCJcclxuICBbdGhlbWVdPVwidGhlbWVcIj48L25neC1tYXQtY29sb3ItY2FudmFzPlxyXG5cclxuPG5neC1tYXQtY29sb3ItY29sbGVjdGlvbiAoY29sb3JDaGFuZ2VkKT1cImhhbmRsZUNvbG9yQ2hhbmdlZCgkZXZlbnQpXCIgW2NvbG9yXT1cImNvbG9yXCI+XHJcbjwvbmd4LW1hdC1jb2xvci1jb2xsZWN0aW9uPiJdfQ==